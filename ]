#!/bin/bash

clear

# {{{
#declare -a bars

#read -d '' "$name" << EOF
#$@
#EOF


#strip_newlines() {
#  local v="$1"
#  v=${v%%[[:space:]]}
#  v=${v##[[:space:]]}
#  echo "$v"
#}

# }}}

# source soap.sh, define config like below and execute!

# TODO
# get fzf menu if no profile name is given

log() {
  echo "$*"
}

# {{{
bar() {
  (( "$#" == 0 )) && return
  name="$1"
  shift
  declare -g $name="$*"
  bars+=("$name")
}

tub() { name="$1" ; tubs+=("$name") ; shift ; declare -g $name="$@" ; }
# }}}

#            config
# ------------------------------

bar

bar bspwm "
etc/bspwm.d/bspwmrc -> ~/.config/bspwm/bspwmrc
etc/bspwm.d/sxhkdrc -> ~/.config/sxhkd/sxhkdrc
"

bar anywm "
etc/polybar.d/rc    -> ~/.config/polybar/config
etc/picom           -> ~/.config/picom.conf
"

bar _yay "
xorg ...
rsta
"

__yay() {
  local content="$1"
  echo "called __yay with content:"
  echo "$content"
}

tub p "anywm _yay"

#profile_string="p"
#echo ${!profile_string}

#v=(${!profile_string})
#echo "${v[@]}"

parse() { # $1 - line
  local regex_link="(\S*)\s*->[[:blank:]]*(.*)"

  if [[ "$1" =~ $regex_link ]]; then
    from="${BASH_REMATCH[1]}"
    to="${BASH_REMATCH[2]}"
    echo "$from >> $to"
    #create_symlink "$from" "$to"
  fi
}

main() { # $1 - profile name
  local profile_name="$1"
  for bar in "${bars[@]}"; do

    # active
    if [[ "${!profile_name}" =~ "$bar" ]]; then
      echo "[$bar]"

      # custom
      if [[ "$bar" =~ ^_ ]]; then
        local c="${!bar}"
        c=${c%%[[:space:]]}
        c=${c##[[:space:]]}
        _${bar} "$c"

      # normal
      else
        while read -r l; do
          parse "$l"
        done <<< "${!bar}"
      fi

    # unactive
    else
      echo -n
    fi
  done
}

main "p"
